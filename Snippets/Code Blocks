/* ───────────────────────────────────────────────── */
/* << Code
──────────────────────────────────────────────────── */
/* styling of code in general */

.markdown-preview-view.markdown-preview-view :is(pre, code),
.cm-s-obsidian .HyperMD-codeblock,
.cm-inline-code {
    --codeblock-border: var(--thin-muted-border);
    --codeblock-roundness: var(--radius-s);
    --code-block-alt-bg: var(--bg5);
    --slight-code-roundish: var(--radius-xs);
}

/* ───────────────────────────────────────────────── */
/* <<< Inline Code
──────────────────────────────────────────────────── */

/* "*:not(pre) > code" targets inline code
(i.e. code that is not in a pre (= block) ) */
.is-live-preview code,
body .markdown-preview-view *:not(pre)>code,
.cm-inline-code.cm-inline-code.cm-inline-code.cm-inline-code.cm-inline-code.cm-inline-code {
    color: var(--inline-code-color);
    background-color: var(--bg2);
    /* more distinduishable from background */
}

.is-live-preview code,
.markdown-preview-view *:not(pre)>code {
    border-radius: var(--slight-code-roundish);
}

.is-live-preview code,
.markdown-source-view .cm-line .cm-inline-code:not(.cm-formatting-code),
.markdown-preview-view *:not(pre)>code {
    background-color: var(--bg2);
}

/* interaction with headers with bg */
body:not(.no-heading-bg) .markdown-source-view .cm-line .cm-inline-code.cm-header.cm-header.cm-header {
    background-color: unset;
}

/* interaction with blockquotes */
.markdown-preview-view blockquote>*:not(pre)>code,
.cm-quote.cm-inline-code.cm-inline-code.cm-inline-code.cm-inline-code.cm-inline-code {
    background-color: var(--bg3);
}

.cm-inline-code {
    padding: 1px 0;
    background-color: var(--bg2);
    border-radius: var(--slight-code-roundish);
}

/* inline code surrounded by backticks */
.cm-formatting-code+.cm-inline-code:not(.cm-formatting-code) {
    border-radius: 0;
}

/* opening backtick */
.cm-formatting-code.cm-formatting-code {
    border-radius: var(--slight-code-roundish) 0 0 var(--slight-code-roundish);
}

/* closing backtick */
.cm-inline-code:not(.cm-formatting-code)+.cm-formatting-code {
    border-radius: 0 var(--slight-code-roundish) var(--slight-code-roundish) 0;
}

/* live preview */
.is-live-preview .cm-active .cm-inline-code:not(.cm-formatting-code) {
    border-radius: 0;
}

/* ───────────────────────────────────────────────── */
/* <<< Code Blocks
──────────────────────────────────────────────────── */
/* templater code gets same size as code blocks */
.cm-templater-command.cm-templater-command {
    font-size: var(--code-size);
}

/* Code blocks in Edit Mode */
:is(.HyperMD-codeblock-end, .HyperMD-codeblock-begin) .cm-formatting-code-block {
    color: var(--text-muted);
}

.cm-s-obsidian .HyperMD-codeblock {
    line-height: 1.4em;
}

body .markdown-source-view.mod-cm6 .cm-line.HyperMD-codeblock {
    padding-left: var(--size-2-2);
}

.cm-s-obsidian div.HyperMD-codeblock-begin-bg {
    background-color: var(--code-block-alt-bg);
    border: var(--codeblock-border);
    border-bottom: none;
    border-top-left-radius: var(--codeblock-roundness);
    border-top-right-radius: var(--codeblock-roundness);
}

.cm-s-obsidian div.HyperMD-codeblock-end-bg {
    border-bottom: var(--codeblock-border);
    border-bottom-right-radius: var(--codeblock-roundness);
    border-bottom-left-radius: var(--codeblock-roundness);
}

div.HyperMD-codeblock-bg:not(.HyperMD-codeblock-begin-bg) {
    border-right: var(--codeblock-border);
    border-left: var(--codeblock-border);
}

/* Code blocks in Live Preview */
.cm-line.HyperMD-codeblock .code-block-flair {
    top: unset;
    padding: 0 1px;
    font-size: calc(var(--code-size) * 0.9);
    color: var(--text-muted);
}

/* Code Blocks in Reading Mode */
.markdown-preview-view.markdown-preview-view pre {
    padding: 0;
    margin-top: var(--size-4-2);
    border: var(--codeblock-border);
    border-radius: var(--codeblock-roundness);
}

.markdown-preview-view pre code {
    padding: var(--size-4-1) var(--size-4-2);
}

/* border on top created like this, since the
::after element cannot be moved beyond a border */
.markdown-reading-view pre[class*="language-"]::before {
    display: block;
    line-height: 1.5em;
    content: " ";
    background-color: var(--code-block-alt-bg);
    border-top-left-radius: calc(var(--codeblock-roundness) * 0.8);
    border-top-right-radius: calc(var(--codeblock-roundness) * 0.8);
}

/* CODE BLOCK WITHOUT LANGUAGE */
.markdown-reading-view pre:not([class^="language-"]) {
    padding: 7px 7px 0;
    overflow-y: hidden;
}

.copy-code-button.copy-code-button.copy-code-button {
    top: unset;
    bottom: 0;
    padding: 0 var(--size-2-2);
    background-color: var(--interactive-normal);
}

.copy-code-button.copy-code-button.copy-code-button:hover {
    color: var(--interactive-normal);
    background-color: var(--hover-accent);
}

.markdown-reading-view pre:not([class^="language-"]) code {
    display: block;
    /* prevents bad multiline-indentation */
    color: var(--text-normal);
}

/* <<< language labels */
pre[class*="language-"]::after {
    position: absolute;
    top: 2px;
    right: 5px;
    font-size: 0.9rem;
    color: var(--text-muted);
    text-shadow: none;
    content: attr(class);
    /* fallback when none of the languages below is used */
}

pre.language-c::after {
    content: "C";
}

pre.language-python::after {
    content: "Python";
}

pre.language-py::after {
    content: "Python";
}

pre.language-nginx::after {
    content: "Nginx";
}

pre.language-css::after {
    content: "CSS";
}

pre.language-node::after {
    content: "Node";
}

pre.language-react::after {
    content: "React";
}

pre.language-javascript::after {
    content: "JavaScript";
}

pre.language-js::after {
    content: "JavaScript";
}

pre.language-typescript::after {
    content: "TypeScript";
}

pre.language-ts::after {
    content: "TypeScript";
}

pre.language-php::after {
    content: "PHP";
}

pre.language-shell::after {
    content: "Shell";
}

pre.language-bash::after {
    content: "Bash";
}

pre.language-zsh::after {
    content: "zsh";
}

pre.language-flow::after {
    content: "Flow";
}

pre.language-sequence::after {
    content: "Sequence";
}

pre.language-sql::after {
    content: "SQL";
}

pre.language-yaml::after {
    content: "YAML";
}

pre.language-ini::after {
    content: "INI";
}

pre.language-xml::after {
    content: "XML";
}

pre.language-git::after {
    content: "GIT";
}

pre.language-cs::after {
    content: "C#";
}

pre.language-cpp::after {
    content: "C++";
}

pre.language-java::after {
    content: "JAVA";
}

pre.language-html::after {
    content: "HTML";
}

pre.language-txt::after {
    content: "Plain Text";
}

pre.language-text::after {
    content: "Plain Text";
}

pre.language-url::after {
    content: "URL";
}

pre.language-applescript::after {
    content: "AppleScript";
}

pre.language-markdown::after {
    content: "Markdown";
}

pre.language-md::after {
    content: "Markdown";
}

pre.language-regex::after {
    content: "Regex";
}

pre.language-lua::after {
    content: "Lua";
}

pre.language-haskell::after {
    content: "Haskell";
}

pre.language-vim::after {
    content: "vimrc";
}

/* <<< Code Block: Line Numbers in Edit Mode */
body:not(.no-codeblock-line-numbers) .HyperMD-codeblock-begin {
    counter-reset: codeblock-line-numbers;
}

body:not(.no-codeblock-line-numbers) .HyperMD-codeblock.cm-line:not(.HyperMD-codeblock-begin, .HyperMD-codeblock-end) {
    padding-left: 2.8em;
}

body:not(.no-codeblock-line-numbers) .HyperMD-codeblock:not(.HyperMD-codeblock-begin, .HyperMD-codeblock-end)::before {
    position: absolute;
    left: 0;
    width: 1.7em;
    height: 100%;
    /* ensures border closes w/ wrapped lines */
    padding-right: 1.4em;
    /* space is needed for collapse indicators */
    font-size: 0.75em;
    line-height: 2;
    color: var(--text-muted);
    text-align: right;
    content: counter(codeblock-line-numbers);
    counter-increment: codeblock-line-numbers;
    background-color: var(--bg2);
}

/* code block end */

body:not(.no-codeblock-line-numbers) .HyperMD-codeblock-end .cm-formatting-code-block {
    padding: 2px 3.5px;
    margin-left: -4px;
    border-bottom-left-radius: var(--codeblock-roundness);
}

body:not(.no-codeblock-line-numbers) .is-live-preview .HyperMD-codeblock-end span:nth-child(2)::before {
    padding: 2px 0.85em;
    margin-left: -4px;
    content: " ";
    background-color: var(--bg2);
    border-bottom-left-radius: var(--radius-s);
}

body:not(.no-codeblock-line-numbers) .HyperMD-codeblock-end .cm-formatting-code-block:first-child {
    /* "first-child" ensures that indented code blocks (e.g. in lists) do not look off */
    background-color: var(--bg2);
}

/* No Wrapping */
/* .markdown-reading-view ensures that these do not get applied to canvases */
.markdown-reading-view .markdown-preview-view pre:not(.frontmatter) code {
    white-space: pre;
}

.markdown-reading-view .markdown-preview-view pre:not(.frontmatter, [class*="language-"]) {
    overflow-x: scroll;
}
